import ast
import os

input_string = "\"json\\n{\\n  \\\"1. Executive Summary\\\": {\\n    \\\"1. Content summary\\\": \\\"Doug DeMuro's YouTube channel primarily focuses on detailed reviews of cars, highlighting their features and quirks in a relatable and entertaining manner. Even though the channel has wide-ranging car content, its most recent uploads place an emphasis on modern luxury and performance vehicles, showcasing Doug's personality and extensive automotive knowledge. DeMuro successfully connects with the audience through both long-form reviews and engaging short-form content, revealing insider perspectives on various car models.\\\",\\n    \\\"2. Channel hosts and personalities\\\": \\\"Doug DeMuro is the main host and personality behind the channel, known for his distinctive and informative style that combines humor with in-depth knowledge of the automotive industry. He has developed a recognizable online persona through his engaging storytelling and detailed analysis, making his car reviews both entertaining and credible to his viewers.\\\",\\n    \\\"3. Channel prominence and competitive landscape\\\": \\\"With over 4.85 million subscribers and nearly 2 billion total views, Doug DeMuro's channel has established itself as a leading source of automotive content on YouTube. The channel effectively competes with other notable automotive personalities and channels by delivering consistent and high-quality content that caters to car enthusiasts and casual viewers alike, setting it apart in a crowded market.\\\"\\n  },\\n  \\\"2. Key Metrics\\\": {\\n    \\\"1. Average views per video\\\": \\\"The channel has an impressive average view count of approximately 384,331 views per video, indicating strong engagement and interest from its audience.\\\",\\n    \\\"2. Top-performing video category\\\": \\\"Shorts (under 60 seconds) have emerged as a key performance category, with several of the highest viewed videos falling under this format, showcasing the effectiveness of quick, easily digestible content.\\\",\\n    \\\"3. Average number of videos published per week\\\": \\\"The channel averages approximately 2 videos published per week, suggesting a consistent content creation strategy that keeps the audience engaged.\\\"\\n  },\\n  \\\"3. Trends\\\": {\\n    \\\"1. Increasing popularity of short-form videos\\\": \\\"The rise in view counts for short videos signifies a shift towards more concise content that captures viewers' attention quickly, reflecting broader trends in social media consumption.\\\",\\n    \\\"2. Interest in luxury and performance vehicles\\\": \\\"Recent uploads show a noticeable emphasis on luxury and high-performance cars, suggesting a growing interest among the audience for in-depth reviews of premium models.\\\",\\n    \\\"3. Engagement through personal storytelling\\\": \\\"Doug\\u2019s use of personal stories related to vehicles and his own experiences resonates with viewers, fostering a deeper connection and making the car reviews more relatable.\\\"\\n  },\\n  \\\"4. Oratry style\\\": {\\n    \\\"1. Doug's oratry style is characterized by a conversational and humorous tone, making complex automotive features accessible and enjoyable for a wide audience. For example, he quips, \\\\\\\"this is one of the last great na V8 engines in the entire car world,\\\\\\\" using humor to highlight the uniqueness of the car while providing informative insights. His storytelling approach enables viewers to stay engaged and learn about the vehicles without feeling overwhelmed by technical jargon. Furthermore, phrases like \\\\\\\"this car is special\\\\\\\" serve to create a strong emotional connection to the vehicles he reviews, enhancing the viewer experience.\\\",\\n    \\\"2. Another distinctive feature of Doug's oratry style is his use of rhetorical questions that invite viewers to engage with the content. For instance, he asks, \\\\\\\"What would you rank every generation 911 from best to worst?\\\\\\\" This technique prompts viewers to reflect on their opinions about the vehicles presented, creating a sense of community and stimulating discussion in the comments section. Additionally, his casual language, such as referring to cars with terms like \\\\\\\"cool\\\\\\\" or \\\\\\\"awesome,\\\\\\\" conveys his genuine enthusiasm for cars, allowing viewers to feel like they're part of an engaging conversation rather than a one-sided lecture.\\\"\\n  },\\n  \\\"5. Recommendations\\\": {\\n    \\\"1. Focus on expanding short-form content\\\": \\\"Given the rising trend and engagement in shorts, consider increasing the production of short-form videos as they are more likely to attract a wider audience and drive higher engagement rates while efficiently showcasing key vehicle features.\\\",\\n    \\\"2. Create thematic series on luxury vehicle segments\\\": \\\"Developing a thematic series focusing on luxury and performance vehicles can capitalize on viewer interest and position the channel as a go-to resource for high-end car enthusiasts.\\\",\\n    \\\"3. Enhance viewer engagement through interactive formats\\\": \\\"Explore incorporating polls, Q&A sessions, or viewer-requested reviews to encourage audience participation and foster a community atmosphere, which can further boost viewer loyalty and engagement.\\\"\\n  },\\n  \\\"Limitations\\\": {\\n    \\\"Data provided does not include historical performance trends\\\": \\\"The analysis could benefit from insights into how engagement metrics have changed over time, which might help in understanding the growth trajectory of the channel.\\\"\\n  }\\n}\\n\""

def parse_json_string(input_string):
    # Remove the triple backticks and "json" from the beginning and end
    clean_string = input_string.strip('`').replace('```json\n', '').replace('\n```', '')
    
    try:
        # Use ast.literal_eval to safely evaluate the string as a Python literal
        json_data = ast.literal_eval(clean_string)
        return json_data
    except (ValueError, SyntaxError) as e:
        print(f"Error parsing JSON string: {e}")
        return None
    
print(f"Input string: " + input_string)

json_var = parse_json_string(input_string)

if json_var:
    print(json_var)
else:
    print("No json_var")
